!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
OP_JOB_GET_FILE	svr_job.h	/^    OP_JOB_GET_FILE,$/;"	e	enum:job_op_e
OP_JOB_GET_FILE_POST	svr_job.h	/^    OP_JOB_GET_FILE_POST,$/;"	e	enum:job_op_e
OP_JOB_LIST	svr_job.h	/^    OP_JOB_LIST,$/;"	e	enum:job_op_e
OP_JOB_LIST_POST	svr_job.h	/^    OP_JOB_LIST_POST,$/;"	e	enum:job_op_e
OP_JOB_PUT_FILE	svr_job.h	/^    OP_JOB_PUT_FILE,$/;"	e	enum:job_op_e
OP_JOB_PUT_FILE_POST	svr_job.h	/^    OP_JOB_PUT_FILE_POST$/;"	e	enum:job_op_e
OP_JOB_READ	svr_job.h	/^    OP_JOB_READ,$/;"	e	enum:job_op_e
OP_JOB_READ_POST	svr_job.h	/^    OP_JOB_READ_POST,$/;"	e	enum:job_op_e
OP_JOB_WRITE	svr_job.h	/^    OP_JOB_WRITE,$/;"	e	enum:job_op_e
OP_JOB_WRITE_POST	svr_job.h	/^    OP_JOB_WRITE_POST,$/;"	e	enum:job_op_e
PORTNO	svr_internal.h	15;"	d
STRIPE_UNIT	svr_internal.h	17;"	d
WTHR_NUM	svr_internal.h	16;"	d
_SVR_INTERNAL_H	svr_internal.h	2;"	d
_SVR_JOB_H	svr_job.h	2;"	d
_SVR_TCP_H	svr_tcp.h	2;"	d
accept_new_conn	svr_tcp.c	/^accept_new_conn()$/;"	f
addr	svr_tcp.h	/^    struct sockaddr_in addr;$/;"	m	struct:svr_sock_s	typeref:struct:svr_sock_s::sockaddr_in
buf	svr_job.h	/^    char       *buf;$/;"	m	struct:svr_job_s
buflen	svr_job.h	/^    char        buflen;$/;"	m	struct:svr_job_s
cliaddr	svr_tcp.h	/^    struct sockaddr_in cliaddr;$/;"	m	struct:svr_conn_s	typeref:struct:svr_conn_s::sockaddr_in
cnt	svr_job.h	/^    int                 cnt;$/;"	m	struct:svr_jobq_s
fd	svr_job.h	/^    int         fd;$/;"	m	struct:svr_job_s
fd	svr_tcp.h	/^    int fd;$/;"	m	struct:svr_conn_s
filename	svr_job.h	/^    char       *filename;$/;"	m	struct:svr_job_s
handle_issue	svr_wthr.c	/^handle_issue(svr_job_t *job)$/;"	f	file:
head	svr_job.h	/^    svr_job_t          *head;$/;"	m	struct:svr_jobq_s
job_op_e	svr_job.h	/^enum job_op_e {$/;"	g
job_op_t	svr_job.h	/^typedef enum job_op_e job_op_t;$/;"	t	typeref:enum:job_op_e
jobq	svr_job.c	/^svr_jobq_t *jobq;$/;"	v
lock	svr_job.h	/^    pthread_mutex_t     lock;$/;"	m	struct:svr_jobq_s
main	svr_cthr.c	/^main() {$/;"	f
msg	svr_job.h	/^    void       *msg;$/;"	m	struct:svr_job_s
next	svr_job.h	/^    struct svr_job_s* next;$/;"	m	struct:svr_job_s	typeref:struct:svr_job_s::svr_job_s
offset	svr_job.h	/^    off_t       offset;$/;"	m	struct:svr_job_s
op	svr_job.h	/^    job_op_t    op;$/;"	m	struct:svr_job_s
parent	svr_job.h	/^    struct svr_job_s* parent;$/;"	m	struct:svr_job_s	typeref:struct:svr_job_s::svr_job_s
ref_cnt	svr_job.h	/^    int         ref_cnt;$/;"	m	struct:svr_job_s
size	svr_job.h	/^    size_t      size;$/;"	m	struct:svr_job_s
sock_init	svr_tcp.c	/^sock_init()$/;"	f
sockfd	svr_tcp.h	/^    int sockfd;$/;"	m	struct:svr_sock_s
svr_conn_s	svr_tcp.h	/^struct svr_conn_s {$/;"	s
svr_conn_t	svr_tcp.h	/^typedef struct svr_conn_s svr_conn_t;$/;"	t	typeref:struct:svr_conn_s
svr_cthr_create_wthr	svr_cthr.c	/^svr_cthr_create_wthr(svr_thr_t *wthrs) {$/;"	f
svr_cthr_main	svr_cthr.c	/^svr_cthr_main() {$/;"	f
svr_cthr_recv_msg	svr_cthr.c	/^svr_cthr_recv_msg(svr_conn_t *conn) {$/;"	f
svr_job_alloc	svr_job.c	/^svr_job_alloc()$/;"	f
svr_job_free	svr_job.c	/^svr_job_free(svr_job_t* job)$/;"	f
svr_job_init	svr_job.c	/^svr_job_init(svr_msg_hdr_t *hdr)$/;"	f
svr_job_s	svr_job.h	/^struct svr_job_s {$/;"	s
svr_job_t	svr_job.h	/^typedef struct svr_job_s svr_job_t;$/;"	t	typeref:struct:svr_job_s
svr_jobq_deq	svr_job.c	/^svr_jobq_deq()$/;"	f
svr_jobq_enq	svr_job.c	/^svr_jobq_enq(svr_job_t *job)$/;"	f
svr_jobq_init	svr_job.c	/^svr_jobq_init()$/;"	f
svr_jobq_s	svr_job.h	/^struct svr_jobq_s {$/;"	s
svr_jobq_t	svr_job.h	/^typedef struct svr_jobq_s svr_jobq_t;$/;"	t	typeref:struct:svr_jobq_s
svr_recv_msg	svr_tcp.c	/^svr_recv_msg(svr_conn_t *conn)$/;"	f
svr_sock	svr_tcp.c	/^svr_sock_t *svr_sock;$/;"	v
svr_sock_s	svr_tcp.h	/^struct svr_sock_s {$/;"	s
svr_sock_t	svr_tcp.h	/^typedef struct svr_sock_s svr_sock_t;$/;"	t	typeref:struct:svr_sock_s
svr_thr_s	svr_cthr.c	/^struct svr_thr_s {$/;"	s	file:
svr_thr_t	svr_cthr.c	/^typedef struct svr_thr_s svr_thr_t;$/;"	t	typeref:struct:svr_thr_s	file:
svr_wthr_get_file	svr_wthr.c	/^svr_wthr_get_file(svr_job_t *job)$/;"	f	file:
svr_wthr_get_file_post	svr_wthr.c	/^svr_wthr_get_file_post(svr_job_t *job)$/;"	f	file:
svr_wthr_list	svr_wthr.c	/^svr_wthr_list(svr_job_t *job)$/;"	f	file:
svr_wthr_main	svr_wthr.c	/^svr_wthr_main(void *arg)$/;"	f
svr_wthr_put_file	svr_wthr.c	/^svr_wthr_put_file(svr_job_t *job)$/;"	f	file:
svr_wthr_put_file_post	svr_wthr.c	/^svr_wthr_put_file_post(svr_job_t *job)$/;"	f	file:
svr_wthr_read	svr_wthr.c	/^svr_wthr_read(svr_job_t *job)$/;"	f	file:
svr_wthr_read_post	svr_wthr.c	/^svr_wthr_read_post(svr_job_t *job)$/;"	f	file:
svr_wthr_write	svr_wthr.c	/^svr_wthr_write(svr_job_t *job)$/;"	f	file:
svr_wthr_write_post	svr_wthr.c	/^svr_wthr_write_post(svr_job_t *job)$/;"	f	file:
tail	svr_job.h	/^    svr_job_t          *tail;$/;"	m	struct:svr_jobq_s
tid	svr_cthr.c	/^    pthread_t   tid;$/;"	m	struct:svr_thr_s	file:
tnum	svr_cthr.c	/^    int         tnum;$/;"	m	struct:svr_thr_s	file:
